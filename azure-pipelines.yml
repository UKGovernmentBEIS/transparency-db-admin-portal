# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pr:
  - master

variables:

  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "12.9"
            displayName: "Install Node.js"

          - script: |
              npm cache clear --force && npm install --no-shrinkwrap --update-binary
              npm run build --if-present
            #  npm run test --if-present
            displayName: "npm install, build and test"

          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - task: PublishPipelineArtifact@1
            displayName: 'Publish pipeline artifacts'
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip

  - stage:
    displayName: Deploy to dev/test environment
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - job: waitForValidation
        displayName: Confirm dev/test deployment
        pool: server
        timeoutInMinutes: 4320 # job times out in 3 days
        steps:
        - task: ManualValidation@0
          timeoutInMinutes: 1440 # task times out in 1 day
          inputs:
              instructions: 'Please confirm deployment to dev/test'
      - deployment: DeployLinuxWebAppDev
        displayName: Deploy Linux Web App - TestDev
        environment: 'dev'
        dependsOn: waitForValidation
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'BEIS-Subsidy-Control-TestDev'
                    appType: 'webAppLinux'
                    WebAppName: 'dev-transparency-db-admin-portal'
                    packageForLinux: '$(Pipeline.Workspace)/**/$(Build.BuildId).zip'
  - stage:
    displayName: Deploy to staging environment
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - deployment: DeployLinuxWebAppStg
        displayName: Deploy Linux Web App - Staging
        environment: 'stg'
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'BEIS-Subsidy-Control-Staging'
                    appType: 'webAppLinux'
                    WebAppName: 'stg-transparency-db-admin-portal'
                    packageForLinux: '$(Pipeline.Workspace)/**/$(Build.BuildId).zip'
